<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="site.doget.data.deposit.DepositCustomerMapper">
    <resultMap id="CustomerCountByTypeResultMap" type="site.doget.data.common.dto.CustomerCountByTypeRawDto">
        <result property="newDt" column="new_dt"/>
        <result property="custDscdNm" column="cust_dscd_nm"/>
        <result property="count" column="count" javaType="int"/>
    </resultMap>
    <resultMap id="CustomerCountByAmountResultMap" type="site.doget.data.common.dto.CustomerCountByAmountRawDto">
        <result property="range" column="range"/>
        <result property="custDscdNm" column="cust_dscd_nm"/>
        <result property="count" column="count" javaType="int"/>
    </resultMap>
    <resultMap id="CustomerCountByRegionResultMap" type="site.doget.data.common.dto.CustomerCountByRegionRawDto">
        <result property="custLctplcNm" column="cust_lctplc_nm"/>
        <result property="count" column="count" javaType="int"/>
    </resultMap>


    <select id="findDepositByCustomerType" resultMap="CustomerCountByTypeResultMap" parameterType="map">
        SELECT
        <if test="term == 'yearly'">TO_CHAR(new_dt, 'yyyy') AS new_dt,</if>
        <if test="term == 'quarterly'">TO_CHAR(new_dt, 'yyyy-q') AS new_dt,</if>
        <if test="term == 'monthly'">TO_CHAR(new_dt, 'yyyy-mm') AS new_dt,</if>
        cust_dscd_nm, COUNT(*) AS count
        FROM deposit_info
        WHERE bank_code = #{bankCode} AND new_dt BETWEEN TO_DATE(#{stDate}, 'yyyy-mm-dd') AND TO_DATE(#{endDate}, 'yyyy-mm-dd')
        GROUP BY
        <if test="term == 'yearly'">TO_CHAR(new_dt, 'yyyy'),</if>
        <if test="term == 'quarterly'">TO_CHAR(new_dt, 'yyyy-q'),</if>
        <if test="term == 'monthly'">TO_CHAR(new_dt, 'yyyy-mm'),</if>
        cust_dscd_nm
        ORDER BY new_dt
    </select>

    <select id="findDepositByAmount" resultMap="CustomerCountByAmountResultMap" parameterType="map">
    <![CDATA[
        WITH ranges AS (
            SELECT 0 AS lower_bound, 300000 AS upper_bound FROM DUAL
            UNION ALL
            SELECT 300000, 1000000 FROM DUAL
            UNION ALL
            SELECT 1000000, 3000000 FROM DUAL
            UNION ALL
            SELECT 3000000, 5000000 FROM DUAL
            UNION ALL
            SELECT 5000000, 7000000 FROM DUAL
            UNION ALL
            SELECT 7000000, 10000000 FROM DUAL
            UNION ALL
            SELECT 10000000, 13000000 FROM DUAL
            UNION ALL
            SELECT 13000000, 20000000 FROM DUAL
            UNION ALL
            SELECT 20000000, 30000000 FROM DUAL
            UNION ALL
            SELECT 30000000, 40000000 FROM DUAL
            UNION ALL
            SELECT 40000000, NULL FROM DUAL
        )
        SELECT
            r.lower_bound || '~' || NVL(TO_CHAR(r.upper_bound), '') AS range,
            d.cust_dscd_nm,
            COUNT(d.cust_dscd_nm) AS customer_count
        FROM ranges r
                 LEFT JOIN deposit_info d
                           ON d.NEW_DPSAMT >= r.lower_bound
                               AND (d.NEW_DPSAMT < r.upper_bound OR r.upper_bound IS NULL)
                               AND d.bank_code = #{bankCode}
                               AND d.new_dt BETWEEN TO_DATE(#{stDate}, 'yyyy-mm-dd') AND TO_DATE(#{endDate}, 'yyyy-mm-dd')
        GROUP BY r.lower_bound, r.upper_bound, d.cust_dscd_nm
        ORDER BY r.lower_bound, d.cust_dscd_nm
        ]]>
    </select>

    <select id="findDepositByRegion" resultMap="CustomerCountByRegionResultMap" parameterType="map">
        SELECT NVL(cust_lctplc_nm, '미기입') AS cust_lctplc_nm, COUNT(*) AS count
        FROM deposit_info
        WHERE bank_code = #{bankCode} AND new_dt BETWEEN TO_DATE(#{stDate}, 'yyyy-mm-dd') AND TO_DATE(#{endDate}, 'yyyy-mm-dd')
        GROUP BY cust_lctplc_nm
    </select>



</mapper>
